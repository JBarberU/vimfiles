snippet new_header
#pragma once

namespace $1
{
class $2
{
public:
    $3
};
}
endsnippet

snippet new_cpp
#include "$1"

namespace $2
{
$3
}
endsnippet

snippet inc "Include statement"
#include <$1>
endsnippet

snippet inci "Include iostream"
#include <iostream>
endsnippet

snippet cout "std::cout"
std::cout << ${1:"Hello World!"} << std::endl;
endsnippet

snippet main "Typical c++ main"
int main(int, char**)
{
	${0:${VISUAL:;}}
	return 0;
}
endsnippet

snippet vec "std::vector"
std::vector<${1:std::string}> $2;
endsnippet

snippet for "For loop"
for ($1 : $2)
{
	${3:${VISUAL:;}}
}
endsnippet

snippet cfor "For loop"
for (size_t ${1:i}{0}; $1 < $2; ++$1)
{
	${3:${VISUAL:;}}
}
endsnippet

snippet ns "Namespace"
namespace $1
{
$0
}
endsnippet

snippet if "If"
if ($1)
{
	${0:${VISUAL}}
}
$0
endsnippet

snippet ife "If / Else"
if ($1)
{
	$2
}
else
{
	$3
}
$0
endsnippet

snippet else "Else"
else
{
	${0:${VISUAL}}
}
$0
endsnippet

snippet switch "Switch"
switch ($1)
{
case $2:
	$0
	break;
default:
	break;
}
endsnippet

snippet case "Case"
case $1:
	$0
	break;
endsnippet

snippet while "While loop"
while ($1)
{
	${0:${VISUAL}}
}
endsnippet
